#!/bin/bash
set -e -E -u -C

#set -x
HOST=${1:?no HOST given?!}
echo "testing $HOST"

REPOS=${2:-$HOST}
echo "using repos found under $REPOS"

TESTREPO1=testrepo1
TESTREPO2=testrepo2
TESTREPO3=testrepo3
TESTRPM=foo-1.0-1.x86_64.rpm
ANOTHER_TESTRPM=foo-1.42-1.x86_64.rpm
CURL="curl -kLis"
CHECK_STATE="grep -i -C 100"
OUT=target/full-lifecycle-tests


function call {
    echo
    echo "######## calling '$*'"
    $*
}

function die {
    echo $*
    exit 2
}

trap "echo; echo; echo AN ERROR OCCURED; echo; exit 1" ERR

rm -rf $OUT/*
mkdir -p $OUT

yum --version &> /dev/null || die "'yum' needed"
createrepo_c --help &> /dev/null || die "'createrepo_c' needed"

YUM_CONF=$OUT/yum.conf
YUM="yum -c $YUM_CONF --disablerepo=* --enablerepo=testrepo*"
YUMMY="yum --disablerepo=* --enablerepo=a,b,c -c"
$(dirname $0)/create-yum-conf $REPOS repos/$TESTREPO1 repos/$TESTREPO2 repos/$TESTREPO3 > $YUM_CONF

echo "preparing test repos"
$CURL -X DELETERECURSIVLY $HOST/admin/v1/repos/$TESTREPO1 -s &> /dev/null || :
$CURL -X DELETERECURSIVLY $HOST/admin/v1/repos/$TESTREPO2 -s &> /dev/null || :
$CURL -X DELETERECURSIVLY $HOST/admin/v1/repos/$TESTREPO3 -s &> /dev/null || :

echo "check if admin service is ready"
call $CURL $HOST/admin/v1/ready | $CHECK_STATE "204 NO CONTENT"

echo "try to upload rpm to non-existant repo"
call $CURL -F rpm=@res/$TESTRPM $HOST/admin/v1/repos/$TESTREPO1 | $CHECK_STATE "404 NOT FOUND"

echo "try to upload non-rpm"
call $CURL -F rpm=@setup.cfg $HOST/admin/v1/repos/$TESTREPO1 | $CHECK_STATE "400 BAD REQUEST"

echo "try to create invalid repos"
call $CURL -X PUT $HOST/admin/v1/repos/repodata | $CHECK_STATE "403 FORBIDDEN"
call $CURL -X PUT $HOST/admin/v1/repos/.foo | $CHECK_STATE "403 FORBIDDEN"

echo "create nested repo structure"
call $CURL -X DELETERECURSIVLY $HOST/admin/v1/repos/a -s &> /dev/null || :
call $CURL -X PUT $HOST/admin/v1/repos/a/b/c | $CHECK_STATE "201 CREATED"

echo "checking nested repos via yum"
$(dirname $0)/create-yum-conf $REPOS repos/a > $OUT/a.conf
$(dirname $0)/create-yum-conf $REPOS repos/a/b > $OUT/ab.conf
$(dirname $0)/create-yum-conf $REPOS repos/a/b/c > $OUT/abc.conf

echo "uploading rpm to nested repo a/b"
call $CURL -F rpm=@res/$TESTRPM $HOST/admin/v1/repos/a/b  -i -s | $CHECK_STATE "201 CREATED"

call $CURL $HOST/admin/v1/repos/a?update-metadata | $CHECK_STATE "204 NO CONTENT"
call $YUMMY $OUT/a.conf clean all
call $YUMMY $OUT/a.conf list foo 2>&1 | grep "No matching"
call $YUMMY $OUT/ab.conf clean all
call $YUMMY $OUT/ab.conf list foo 2>&1 | grep "foo.x86"
call $YUMMY $OUT/abc.conf clean all
call $YUMMY $OUT/abc.conf list foo 2>&1 | grep "No matching"

echo "cleaning up nested repos"
call $CURL -X DELETERECURSIVLY $HOST/admin/v1/repos/a -s | $CHECK_STATE "204 NO CONTENT"

echo "create bulk repos"
call $CURL -F wrong_paramater_name="foo" $HOST/admin/v1/repos | $CHECK_STATE "400 BAD REQUEST"
call $CURL -F pathspec="base/{6,7}/{x86_64,SRPMS,noarch,repodata}" $HOST/admin/v1/repos | $CHECK_STATE "403 FORBIDDEN"
call $CURL -F pathspec="base/.{./,8}" $HOST/admin/v1/repos | $CHECK_STATE "403 FORBIDDEN"
call $CURL -F pathspec="base/foo,base/bar" $HOST/admin/v1/repos | $CHECK_STATE "201 CREATED"
call $CURL -F pathspec="base/{6,7}/{x86_64,SRPMS,noarch}" $HOST/admin/v1/repos | $CHECK_STATE "201 CREATED"
ls -al target/repos/
echo "cleaning up bulk repos"
call $CURL -X DELETERECURSIVLY $HOST/admin/v1/repos/base -s | $CHECK_STATE "204 NO CONTENT"

echo "create $TESTREPO1"
call $CURL -X PUT $HOST/admin/v1/repos/$TESTREPO1 | $CHECK_STATE "201 CREATED"

echo "update newly created repo"
call $CURL $HOST/admin/v1/repos/$TESTREPO1?update | $CHECK_STATE "204 NO CONTENT"
call $CURL $HOST/admin/v1/repos/$TESTREPO1?update-metadata | $CHECK_STATE "204 NO CONTENT"

echo "play around with new repo"
call $CURL $HOST/admin/v1/repos/$TESTREPO1?foo | $CHECK_STATE "403 FORBIDDEN"
call $CURL $HOST/admin/v1/repos/$TESTREPO1?is_link | grep false

echo "try to create $TESTREPO1 again"
call $CURL -X PUT $HOST/admin/v1/repos/$TESTREPO1  -i -s | $CHECK_STATE "201 CREATED"

echo "upload rpm to $TESTREPO1"
call $CURL -F rpm=@res/$TESTRPM $HOST/admin/v1/repos/$TESTREPO1  -i -s | $CHECK_STATE "201 CREATED"

echo "check metadata of unknown rpm"
call $CURL $HOST/admin/v1/repos/$TESTREPO1/unknown.rpm?info -i -s | $CHECK_STATE "404 NOT FOUND"

echo "check metadata of uploaded rpm"
call $CURL $HOST/admin/v1/repos/$TESTREPO1/$TESTRPM?info -i -s | grep "Name.*: foo"
call $CURL $HOST/admin/v1/rpms/$TESTRPM?info -i -s | grep "Name.*: foo"
call $CURL $HOST/admin/v1/rpms/$TESTRPM?stat -i -s | grep "st_blocks"

echo "try to upload rpm to $TESTREPO1 again"
call $CURL -F rpm=@res/$TESTRPM $HOST/admin/v1/repos/$TESTREPO1  -i -s | $CHECK_STATE "409 CONFLICT"

echo "create $TESTREPO2"
call $CURL -X PUT $HOST/admin/v1/repos/$TESTREPO2 -i -s | $CHECK_STATE "201 CREATED"

echo "create empty repo3"
call $CURL -X PUT $HOST/admin/v1/repos/$TESTREPO3 -i -s | $CHECK_STATE "201 CREATED"

echo "update testrepo metadata"
call $CURL $HOST/admin/v1/repos/$TESTREPO1?update-metadata -i -s | $CHECK_STATE "204 NO CONTENT"

echo "update all metadata"
call $CURL $HOST/admin/v1/update -i -s | $CHECK_STATE "204 NO CONTENT"

echo "search for rpm via yum"
$YUM clean all
$YUM repolist
$YUM search foo 2> /dev/null | grep "foo.x86_64"
echo "rpm found in repo: " $($YUM info foo | grep "testrepo1")

echo "stage non-existing rpm"
call $CURL -X STAGE $HOST/admin/v1/repos/$TESTREPO1/not-there.rpm?stageto=testrepo2 -i -s | $CHECK_STATE "404 NOT FOUND"

echo "stage testrpm to non-existing repo"
call $CURL -X STAGE $HOST/admin/v1/repos/$TESTREPO1/$TESTRPM?stageto=unknown-repo -i -s | $CHECK_STATE "404 NOT FOUND"

echo "stage testrpm to testrepo2"
call $CURL -X STAGE $HOST/admin/v1/repos/$TESTREPO1/$TESTRPM?stageto=testrepo2

echo "copy rpm from testrepo2 to testrepo3"
call $CURL -X COPY $HOST/admin/v1/repos/$TESTREPO2/$TESTRPM?copyto=testrepo3

echo "delete rpm from testrepo3"
call $CURL -X DELETE $HOST/admin/v1/repos/$TESTREPO3/$TESTRPM -i -s | $CHECK_STATE "204 NO CONTENT"

echo "search for rpm via yum"
$YUM clean all
$YUM repolist
$YUM search foo 2> /dev/null | grep "foo.x86_64"
echo "rpm found in repo: " $($YUM info foo | grep "testrepo2")

echo "replace repo3 with a link to repo2"
call $CURL -X DELETERECURSIVLY $HOST/admin/v1/repos/$TESTREPO3 -i -s | $CHECK_STATE "204 NO CONTENT"
call $CURL -X PUT $HOST/admin/v1/repos/$TESTREPO3?link_to=testrepo2 -i -s | $CHECK_STATE "201 CREATED"

echo "check for repo links"
call $CURL $HOST/admin/v1/repos/$TESTREPO1?is_link -i -s | grep "false"
call $CURL $HOST/admin/v1/repos/$TESTREPO2?is_link -i -s | grep "false"
call $CURL $HOST/admin/v1/repos/$TESTREPO3?is_link -i -s | grep "true"

echo "try to link to missing repo"
call $CURL -X PUT $HOST/admin/v1/repos/$TESTREPO3?link_to=unknown -i -s | $CHECK_STATE "404 NOT FOUND"

echo "try to relink from repo3 to repo2"
call $CURL -X PUT $HOST/admin/v1/repos/$TESTREPO3?link_to=testrepo2 -i -s | $CHECK_STATE "201 CREATED"

echo "search for rpm via yum"
$YUM clean all
$YUM repolist
$YUM search foo | grep "foo.x86_64"
$YUM info foo --showduplicates
echo "rpm found in repo: " $($YUM info foo --showduplicates | grep "repo3")

echo "fetching all stat for rpm"
call $CURL $HOST/admin/v1/repos/$TESTREPO2/$TESTRPM?stat | grep "st_blocks"

HARDLINKS=$(curl -s $HOST/admin/v1/repos/$TESTREPO2/$TESTRPM?stat=st_nlink)
echo "number of hard links to test rpm: $HARDLINKS"
grep -q 2 <<< $HARDLINKS

echo "upload rpm to $TESTREPO1, again"
call $CURL -F rpm=@res/$TESTRPM $HOST/admin/v1/repos/$TESTREPO1  -i -s | $CHECK_STATE "201 CREATED"
HARDLINKS=$(curl -s $HOST/admin/v1/repos/$TESTREPO2/$TESTRPM?stat=st_nlink)
echo "number of hard links to test rpm: $HARDLINKS"
grep -q 3 <<< $HARDLINKS

echo "uploading newer rpm"
call $CURL -F rpm=@res/$ANOTHER_TESTRPM $HOST/admin/v1/repos/$TESTREPO1  -i -s | $CHECK_STATE "201 CREATED"
call $CURL $HOST/admin/v1/repos/$TESTREPO1?update-metadata -i -s | $CHECK_STATE "204 NO CONTENT"
echo "search for rpm via yum"
$YUM clean all
$YUM repolist
$YUM search foo | grep "foo.x86_64"
$YUM info foo --showduplicates
echo "new foo rpm found: " $($YUM info foo --showduplicates | grep "1.42")

echo "tear down test repos"

echo "try to remove non-empty $TESTREPO2"
call $CURL -X DELETE $HOST/admin/v1/repos/$TESTREPO2  -i -s | $CHECK_STATE "409 CONFLICT"

echo "remove rpm"
call $CURL -X DELETE $HOST/admin/v1/repos/$TESTREPO2/$TESTRPM -i -s | $CHECK_STATE "204 NO CONTENT"

# echo "try to remove rpm that was marked to be removed"
# call $CURL -X DELETE $HOST/admin/v1/repos/$TESTREPO2/$TESTRPM -i -s | $CHECK_STATE "204 NO CONTENT"

echo "update repo, commit all outstanding actions"
call $CURL $HOST/admin/v1/update -i -s | $CHECK_STATE "204 NO CONTENT"

echo "try to remove rpm that was removed already"
call $CURL -X DELETE $HOST/admin/v1/repos/$TESTREPO2/$TESTRPM  -i -s | $CHECK_STATE "404 NOT FOUND"

echo "remove repo $TESTREPO1 recursivly"
call $CURL -X DELETERECURSIVLY $HOST/admin/v1/repos/$TESTREPO1  -i -s | $CHECK_STATE "204 NO CONTENT"

echo "remove empty repo $TESTREPO2"
call $CURL -X DELETE $HOST/admin/v1/repos/$TESTREPO2  -i -s | $CHECK_STATE "204 NO CONTENT"

echo "remove repo link $TESTREPO3"
call $CURL -X DELETE $HOST/admin/v1/repos/$TESTREPO3  -i -s | $CHECK_STATE "204 NO CONTENT"

echo "try to remove repo link $TESTREPO3 that was removed already"
call $CURL -X DELETE $HOST/admin/v1/repos/$TESTREPO3  -i -s | $CHECK_STATE "404 NOT FOUND"

echo "calling update a last time, checking cleanup of metadata"
call $CURL $HOST/admin/v1/update -i -s | $CHECK_STATE "204 NO CONTENT"

echo "trying to shutdown service (this may fail when running as wsgi service)"
call $CURL -X POST $HOST/admin/v1/shutdown

echo "cleaning up"
rm -rfv $OUT

echo
echo "SUCCESS"
echo
