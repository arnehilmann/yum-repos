#!/bin/bash
set -e -E -u -o pipefail -C

#set -x
HOST=${1:?no HOST given?!}
echo "testing $HOST"

REPOTOP=repos/
REPO1=repos/repo1

CURL="curl -k -i -s"
CHECK_STATE="grep -i --color=always"

trap "echo; echo; echo AN ERROR OCCURED; echo; exit 1" ERR


TMP=$PWD/tmp
EMPTY_DIR=$TMP/empty

create_rpm() {
    NAME=$1
    VERSION=$2
    (
        cd $TMP
        fpm -s dir -t rpm -v $VERSION -n $NAME --force $EMPTY_DIR 2>&1 | sed -n "/Created/{s#.*path=>\"#$TMP/#;s#\"}##;p}"
    )
}

rm -rf $TMP
mkdir -p $EMPTY_DIR

cat > $TMP/yumtop.conf << CONFTOP
[repotop]
name=repotop
baseurl=http://$HOST/$REPOTOP
gpgcheck=0
enabled=1
CONFTOP

yumtop() {
    echo
    echo "yum $*"
    /usr/bin/yum -c $TMP/yumtop.conf clean all
    /usr/bin/yum -c $TMP/yumtop.conf $*
}

cat > $TMP/yum1.conf << CONF1
[repo1]
name=repo1
baseurl=http://$HOST/$REPO1
gpgcheck=0
enabled=1
CONF1

yum1() {
    echo
    echo "yum $*"
    /usr/bin/yum -c $TMP/yum1.conf clean all
    /usr/bin/yum -c $TMP/yum1.conf $*
}

rm -rf /tmp/repos/*

RPM1=$(create_rpm foo 1.0)
echo $RPM1
exit


yumtop repolist all || :

$CURL $HOST/admin/ready | $CHECK_STATE "200 OK"
$CURL -X PUT $HOST/admin/$REPO1 | $CHECK_STATE "201 CREATED"

yumtop repolist all 2>&1 | $CHECK_STATE "Error 404" || :

$CURL $HOST/admin/update | $CHECK_STATE "200 OK"

yumtop repolist all

exit
$CURL -F rpm=@

createrepo_c $REPO
createrepo_c $REPO/repo1

yumtop repolist all

create_rpm foo 1.0 repo1

yumtop search foo | grep "No matches found"

createrepo_c $REPO

yumtop search foo | grep -C 100 --color=always "foo.x86"

yumtop list foo | grep "1.0-1"

create_rpm foo 1.1 repo1

yumtop list foo | grep "1.0-1" | grep toprepo

createrepo_c $REPO/repo1

yumtop list foo | grep "1.0-1" | grep toprepo
yum1 list foo | grep "1.1-1" | grep repo1

create_rpm foo 1.2

createrepo_c $REPO

yumtop list foo | grep "1.2-1" | grep toprepo
yum1 list foo | grep "1.1-1" | grep repo1
exit


echo "---------------------"

mkdir -p $REPO/repo2
create_rpm foo 2.0 repo2
createrepo_c $REPO/repo2

yum list foo | grep "1.2-1" | grep toprepo

ln -sf $REPO/repo2/*.rpm* $REPO/repo1
createrepo_c $REPO/repo1

yum list foo
yum list foo | grep "2.0-1" | grep repo1




echo "preparing test repos"
$CURL -X DELETERECURSIVLY $HOST/admin/$TESTREPO1 -s &> /dev/null || :
$CURL -X DELETERECURSIVLY $HOST/admin/$TESTREPO2 -s &> /dev/null || :
$CURL -X DELETERECURSIVLY $HOST/admin/$TESTREPO3 -s &> /dev/null || :


echo "check if yum-repo service is up"
$CURL $HOST/repos/           -i -s | $CHECK_STATE "200 OK"

echo "check if admin service is ready"
$CURL $HOST/admin/ready      -i -s | $CHECK_STATE "200 OK"

echo "try to upload rpm to non-existant repo"
$CURL -F rpm=@res/$TESTRPM $HOST/admin/$TESTREPO1  -i -s | $CHECK_STATE "404 NOT FOUND"

echo "create $TESTREPO1"
$CURL -X PUT $HOST/admin/$TESTREPO1  -i -s | $CHECK_STATE "201 CREATED"

echo "check created repo"
$CURL $HOST/$TESTREPO1       -i -s | $CHECK_STATE "200 OK"

echo "try to create $TESTREPO1 again"
$CURL -X PUT $HOST/admin/$TESTREPO1  -i -s | $CHECK_STATE "201 CREATED"

echo "upload rpm to $TESTREPO1"
$CURL -F rpm=@res/$TESTRPM $HOST/admin/$TESTREPO1  -i -s | $CHECK_STATE "201 CREATED"

echo "check metadata of uploaded rpm"
$CURL $HOST/admin/$TESTREPO1/$TESTRPM/info -i -s | grep "Name.*: foo"

echo "try to upload rpm to $TESTREPO1 again"
$CURL -F rpm=@res/$TESTRPM $HOST/admin/$TESTREPO1  -i -s | $CHECK_STATE "409 CONFLICT"

echo "create $TESTREPO2"
$CURL -X PUT $HOST/admin/$TESTREPO2 -i -s | $CHECK_STATE "201 CREATED"

echo "create empty repo3"
$CURL -X PUT $HOST/admin/$TESTREPO3 -i -s | $CHECK_STATE "201 CREATED"

echo "update all metadata"
$CURL $HOST/admin/update-all-metadata -i -s | $CHECK_STATE "200 OK"

if $TEST_YUM; then
    echo "search for rpm via yum"
    $YUM clean all
    $YUM repolist
    $YUM search foo 2> /dev/null | grep "foo.x86_64"
    echo "rpm found in repo: " $($YUM info foo | grep "testrepo1")
fi

$CURL -X STAGE $HOST/admin/$TESTREPO1/$TESTRPM/stageto/testrepo2

if $TEST_YUM; then
    echo "search for rpm via yum"
    $YUM clean all
    $YUM repolist
    $YUM search foo 2> /dev/null | grep "foo.x86_64"
    echo "rpm found in repo: " $($YUM info foo | grep "testrepo2")
fi

echo "replace repo3 with a link to repo2"
$CURL -X DELETE $HOST/admin/$TESTREPO3 -i -s | $CHECK_STATE "204 NO CONTENT"
$CURL -X PUT $HOST/admin/$TESTREPO3?link_to=testrepo2 -i -s | $CHECK_STATE "201 CREATED"

echo "check for repo links"
$CURL $HOST/admin/$TESTREPO1/is_link -i -s | grep "false"
$CURL $HOST/admin/$TESTREPO3/is_link -i -s | grep "true"

echo "try to relink from repo3 to repo2"
$CURL -X PUT $HOST/admin/$TESTREPO3?link_to=testrepo2 -i -s | $CHECK_STATE "201 CREATED"

if $TEST_YUM; then
    echo "search for rpm via yum"
    $YUM clean all
    $YUM repolist
    $YUM search foo | grep "foo.x86_64"
    echo "rpm found in repo: " $($YUM info foo --showduplicates | grep "repo3")
fi


echo "tear down test repos"

echo "try to remove non-empty $TESTREPO2"
$CURL -X DELETE $HOST/admin/$TESTREPO2  -i -s | $CHECK_STATE "409 CONFLICT"

echo "remove rpm"
$CURL -X DELETE $HOST/admin/$TESTREPO2/$TESTRPM -i -s | $CHECK_STATE "204 NO CONTENT"

echo "try to remove rpm that was removed already"
$CURL -X DELETE $HOST/admin/$TESTREPO2/$TESTRPM  -i -s | $CHECK_STATE "404 NOT FOUND"

echo "remove empty repo $TESTREPO1"
$CURL -X DELETE $HOST/admin/$TESTREPO1  -i -s | $CHECK_STATE "204 NO CONTENT"

echo "remove empty repo $TESTREPO2"
$CURL -X DELETE $HOST/admin/$TESTREPO2  -i -s | $CHECK_STATE "204 NO CONTENT"

echo "remove repo link $TESTREPO3"
$CURL -X DELETE $HOST/admin/$TESTREPO3  -i -s | $CHECK_STATE "204 NO CONTENT"

echo "try to remove repo link $TESTREPO3 that was removed already"
$CURL -X DELETE $HOST/admin/$TESTREPO3  -i -s | $CHECK_STATE "404 NOT FOUND"

echo "shutdown service"
$CURL -X POST $HOST/admin/shutdown      -i -s | $CHECK_STATE "200 OK"

echo "SUCCESS"





